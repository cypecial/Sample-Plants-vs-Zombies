/**
 * @(#)Sun.java
 * this is the sun class that contains all the access specifiers for individual suns(falling suns, flower-generated suns), 
 * accessors methods and other useful methods that supports the main InGame Class.
 *
 * @author Yiping Che, Stephen Wang
 * @version 1.00 2013/4/25
 */

import java.util.*;
import java.awt.image.*;
import java.io.*; 
import javax.imageio.*;
import java.awt.Rectangle;
public class Sun {
	BufferedImage[]pics;
	BufferedImage startPic;
	public int count, timerCount, x,yi,yf,sunRow,sunCol,id,cd;
    public Sun(int id) {
    	//natural falling suns
    	Random num = new Random();
    	this.count = 0;
    	this.timerCount = 0;
    	this.sunRow = num.nextInt(5);//random row
    	this.sunCol = num.nextInt(8);//random column
    	this.x = 120+sunCol*82;
    	this.yi = 100;
    	this.yf=125+sunRow*97;//destination (final value of y)
    	this.id = id;
    	this.cd = 500;
    	this.pics = getImages("sun",18);
    	this.startPic = pics[0];
    }
    public Sun(int id, int x, int y){
    	//suns generated by sunflower
    	this.count = 0;
    	this.timerCount = 0;
    	this.x = x;
    	this.yi = y;
    	this.id = id;
    	this.cd = 500;
    	this.pics = getImages("sun",18);
    	this.startPic = pics[0];
    }
    public int getId(){
    	//return id of the sun
    	return id;
    }
    public BufferedImage[]getImages(String name,int len){
    	//get images of the suns (sprites)
		BufferedImage pics[]= new BufferedImage[len];
		try{
			for(int i=1;i<=len;i++){
				pics[i-1] = ImageIO.read(new File(name+"/"+i+".png"));
			}
		}
		catch(IOException e){}
		
		return pics;
	}
	public void countUpdate(){
		//timer before next sprite
    	if(timerCount==10){
			if(count==17){
				count=0;
			}else{
				count++;
			}
			timerCount=0;
			}else{
				timerCount++;
		}
    }
    public int getX(){return x;}
    public int getY(){return yi;}
    public void setX(int nx){
    	this.x=nx;
    }
    public void setY(int ny){
    	this.yi=ny;
    }
    public void drop(){
    	//drop sun
    	if(yi!=yf){
    		yi+=1;
    	}
    	else{
    		yi=yf;
    	}
    }
    public void coolDown(){
    	if(cd!=0){
    		cd--;
    	}
    }
    public boolean checkCollide(int mx, int my){
    	//check collision of cursor with the sun
    	Rectangle mRect = new Rectangle (mx,my,1,1);
    	return mRect.intersects(getRect());
	}
	public Rectangle getRect(){ 
		//gets rectangle of the sun (used for collision check)
    	return new Rectangle(getX(),getY(),50,50);
    }
}